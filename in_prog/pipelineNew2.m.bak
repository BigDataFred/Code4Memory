%%
restoredefaultpath;
addpath('~rouxf/prj/Bham/code/mcode/project_EM/');
addpath(genpath('~rouxf/prj/Bham/code/mcode/utils/'));
addpath(genpath('~rouxf/prj/Bham/code/mcode/visualize/'));
addpath(genpath('~/tbx/chronux_2_11/spectral_analysis/'));
addpath('~/tbx/eeglab14_1_1b/functions/sigprocfunc/');
addpath('~/tbx/fieldtrip-20170618/');
ft_defaults;

%% recruit workers for parallel computing
if isempty(gcp('nocreate'))
    parpool(36,'SpmdEnabled', false)
end;
tic;

%%
Fs = 1e3;
[hpF] = fir1(3*floor(Fs/0.5),0.5./(Fs/2),'high');

% t = 0:1/Fs:14;
% sig = sin(2*pi*0.5.*t)+0.5*sin(2*pi*2.*t)+.25*sin(2*pi*15.*t)+.25*randn(1,length(t));
% filt = filtfilt(hpF,1,[sig fliplr(sig) sig fliplr(sig) sig]);
% filt = filt(2*length(sig)+1:length(sig)*3);
% %filt2 = eegfilt(sig,Fs,0.5,0);
% figure;
% hold on;
% plot(t,sig);
% %plot(t,filt2,'r');
% plot(t,filt,'g');
% xlim([0 4]);

%%
[bpF] = fir1(3*fix(Fs/3),[3 8]./(Fs/2),'bandpass');

% t = 0:1/Fs:30;
% sig = .25*sin(2*pi*8.*t)+.25*randn(1,length(t));
% filt = filtfilt(bpF,1,[fliplr(sig) sig fliplr(sig)]);
% filt = filt(length(sig)+1:length(sig)*2);
% filt2 = eegfilt(sig,Fs,4,11);
% figure;
% hold on;
% plot(t,sig);
% plot(t,filt2,'r');
% plot(t,filt,'g');
% xlim([0 1]);

%%
[pID] = {'P02','P04','P05','P07','P08','P09'};%

[expMode] = {'fVSpEM'};

%%
erpPOW1 = zeros(81,533);
erpPOW2 = zeros(84,925);
erpPOW3 = zeros(81,533);
erpPOW4 = zeros(84,925);
stPOW1 = zeros(81,533);
stPOW2 = zeros(84,925);
stPOW3 = zeros(81,533);
stPOW4 = zeros(84,925);
seshCnt = 0;
chanCntH = 0;
chanCntM = 0;
trlCntH  = 0;
trlCntM  = 0;
dt = -1500:5500;
dt2 = -1500:250:5500;
filtERP = [];
avgLFPh = [];
LFPpoolH = {};
avgLFPm = [];
LFPpoolM = {};
iFRpoolH = [];
iFRpoolM = [];
iFRpool = [];
unitLabel = {};
lfpPoolLabel4Units = {};
lfpPoolLabel = {};
spkPool = {};
frPool = [];

%%
for curPat = 1:length(pID)
    for curExp  = 1:length( expMode )
        %%
        
        %p2d = ['/media/rouxf/rds-share/iEEG_DATA/MICRO/',pID{curPat},'/',expMode{curExp},'/'];
        p2d = ['/home/rouxf/tmp/resultsC4M/',pID{curPat},'/'];
        
        %sesh = dir(p2d);
        sesh = dir([p2d,pID{curPat},'_',expMode{curExp},'*_lfpDataStimLockedSegmentedAVGdownsampled.mat']);
        
        if ~isempty(sesh)
            %sesh(1:2) = [];
            chck = regexp({sesh(:).name},'\d{4}-\d{2}-\d{2}_\d{2}-\d{2}-\d{2}');
            %selIx= []; cnt = 0;for it = 1:length(chck); if (~isempty(chck{it})) && (sesh(it).isdir);cnt = cnt+1; selIx(cnt) = it;end;end;
            selIx= []; cnt = 0;for it = 1:length(chck); if (~isempty(chck{it}));cnt = cnt+1; selIx(cnt) = it;end;end;
            %sesh = {sesh(selIx).name}'
            dum = cell(1,length(sesh));
            for it = 1:length(chck)
                dum(it) = {sesh(selIx(it)).name(chck{it}:chck{it}+18)}'
            end;
            sesh = dum
            
            %%
            for curSesh = 1:length( sesh )
                
                seshCnt = seshCnt +1;
                
                %%
                spkFile = [ pID{curPat},'_',expMode{curExp},'_',sesh{curSesh},'_spkDataStimLockedSegmented.mat' ];
                %[spkDat] = load([p2d,sesh{curSesh},'/',spkFile])
                [spkDat] = load([p2d,spkFile])
                
                logFile = [ pID{curPat},'_',sesh{curSesh},'_LogFile_EMtask_LogDat.mat' ];
                %load([p2d,sesh{curSesh},'/',logFile])
                
                [trlIx] = spkDat.trlENC;
                [hitIdx] = find(ismember(sort([spkDat.hitIdx;spkDat.missIdx]),spkDat.hitIdx));
                [missIdx] = find(ismember(sort([spkDat.hitIdx;spkDat.missIdx]),spkDat.missIdx));
                
                try
                    load([p2d,logFile])
                    [stimCat] = logDat.LogDat1.log(:,3:4);
                    stimEv = cell(1,size(stimCat,1));
                    for stimIt = 1:size( stimCat ,1 )
                        stimEv(stimIt) = {[stimCat{stimIt,1}(1) stimCat{stimIt,2}(1)]};
                    end;
                    stimID = unique(stimEv);                                        
                catch     
                    stimID = {};
                    stimID(1) = {'dum'};
                    stimEv = cell(1,length(trlIx));
                    for it = 1:length( trlIx )
                        stimEv(it) = stimID;
                    end;
                end;                                
                
                stimEv = stimEv(sort([hitIdx;missIdx]));
                    
                [cluDat] = extractClusterDat2( spkDat );
                
                %%
                sigSel = [];
                if length(hitIdx) >= 20
                    for curClust = 1:length( cluDat.chanLab )
                        
                        [spkRaster] = zeros(length(trlIx),length(dt));
                        [iFR] = zeros(length(trlIx),length(dt));
                        [fr] = zeros(length(trlIx),length(dt2));
                        parfor curTrl = 1:length(trlIx)
                            x = cluDat.ts{curClust}(cluDat.trl{curClust} == trlIx(curTrl));
                            [n,~] = hist(x,dt);
                            spkRaster(curTrl,:) = n;
                            iFR(curTrl,:) = conv(n,gausswin(201),'same')./sum(gausswin(201));
                            [n,~] = hist(x,dt2);
                            fr(curTrl,:) = n;
                        end;
                        [fr] = fr(:,dt2>=-1000 & dt2 <=4.5e3);
                        fr = mean(fr,1)./0.25;
                        tx2 = dt2(dt2>=-1000& dt2 <=4.5e3);
                        
                        [iFR] = iFR(:,dt>=-1000 & dt <=4.5e3);
                        [spkRaster] = spkRaster(:,dt>=-1000 & dt <=4.5e3);
                        tx = dt(dt>=-1000 & dt <=4.5e3);
                        
                        [iFR] = iFR./1e-3;
                        trsh = mean(mean(iFR(:,tx<=0),2))+1.5*std(mean(iFR(:,tx<=0),1));
                        if trsh < 1
                            trsh = 1;
                        end;
                         
                        iFRH = [];iFRM = [];
                        iFRH = mean(iFR(hitIdx,:),1);
                        if ~isempty(missIdx)
                            iFRM = mean(iFR(missIdx,:),1);
                        end;
                        iFR = mean(iFR,1);
                        
                        xix1 = find(sign(diff(iFRH(tx>=200)>trsh))==1)+1;
                        xix2 = find(sign(diff(iFRH(tx>=200)>trsh))==-1)+1;
                        
                        if min(xix2) < min(xix1)
                            xix1 = [1 xix1];
                        end;
                        if length(xix1)>length(xix2)
                            xix2(end+1) = length(iFRH);
                        end;
                        
                        [baseCnt] = sum(spkRaster(:,tx>=-400 & tx <=0),2);
                        baseSD = 2*std(baseCnt);
                        
                        baseLine = median(baseCnt);
                        
                        if any(diff([xix1' xix2'],[],2)>100)                                                        

                            pval = [];
                            for curStim = 1:length(stimID)
                                stimIx = find(strcmp(stimEv,stimID{curStim}));
                                TW = [200 600];
                                p = zeros(1,35);
                                h = zeros(1,35);                               
                                for curTW = 1:35
                                    [postCnt] = sum(spkRaster(:,tx>=TW(1) & tx <=TW(2)),2);
                                    [p(curTW)] = ranksum(postCnt(stimIx),baseCnt(stimIx));
                                    %[statInfo] = baseVSpostDepTtest4SPKdat(baseCnt,postCnt);
                                    TW = TW+100;
%                                     if mean(postCnt(stimIx)) >= baseLine+baseSD
%                                         if median(postCnt(stimIx)) >=2
%                                             h(curTW) = 1;
%                                         end;
%                                     end;
                                end;
                                pval = [pval min(p)];
                            end;
                            
                            if any(pval<0.01) 
                                sigSel = [sigSel curClust];
                                frPool = [frPool;fr];
                                iFRpool = [iFRpool;iFR];
                                iFRpoolH = [iFRpoolH;iFRH];
                                unitLabel = [unitLabel [pID{curPat},sesh{curSesh},cluDat.chanLab{curClust}]];
                                spkPool = [spkPool spkRaster];
                                
                                if ~isempty( iFRM)
                                    iFRpoolM = [iFRpoolM;iFRM];
                                end;
                                
                                %visualizeSpkRaster(tx,spkRaster,min(pval),tx2,iFR,trsh,fr);
                                
                            end;
                        end;
                        
                    end;
                end;
                
                %%
                if ~isempty( sigSel)
                    
                    sigSel = unique(sigSel);
                    
                    chanIx = [];
                    for curChan = 1:length(sigSel)
                        [chanIx(curChan)] = find(strcmp(spkDat.chanLab,cluDat.chanLab(sigSel(curChan))));
                    end;                    
                    lfpPoolLabel4Units = [lfpPoolLabel4Units spkDat.chanLab(chanIx)];
                    
                    chanIx = unique(chanIx);                   
                    
                    %%
                    LFPfn = [pID{curPat},'_',expMode{curExp},'_',sesh{curSesh},'_lfpDataStimLockedSegmenteddownsampled.mat'];
                    [~,fn,ext] = fileparts(LFPfn);
                    
                    %[lfpDat] = load( [p2d,sesh{curSesh},'/',LFPfn] )
                    [lfpDat] = load( [p2d,LFPfn] )
                    if ( ~isfield(lfpDat,'dsTrlTime') )
                        lfpDat.dsTrlTime = lfpDat.trlTime;
                    end;
                    
                    %%
                    IEDfn = [fn,'_IEDdetection',ext];
                    %load([p2d,sesh{curSesh},'/',IEDfn]);
                    load([p2d,IEDfn]);
                    
                    %%
                    for jt = 1:length(chanIx)
                        
                        fprintf([num2str(jt),'/',num2str(length(chanIx))]);
                        
                        [lfp] = lfpDat.LFPseg{chanIx(jt)}(:,1:length(lfpDat.trlENC));
                        [trlIx] = 1:length(lfpDat.trlENC);
                        [trlPool] = sort([lfpDat.hitIdx;lfpDat.missIdx]);
                        
                        if ismember(chanIx(jt),selIx{1})
                            lfp(:,[delIx{1}]) = [];
                            trlIx([delIx{1}]) = [];
                            trlPool([delIx{1}]) = [];
                        else
                            lfp(:,[delIx{2}]) = [];
                            trlIx([delIx{2}]) = [];
                            trlPool([delIx{2}]) = [];
                        end;
                        
                        [ixH] = find(ismember(trlPool,lfpDat.hitIdx));
                        [ixM] = find(ismember(trlPool,lfpDat.missIdx));
                        
                        tIx = find(lfpDat.dsTrlTime >=-.5 & lfpDat.dsTrlTime <=-.1);
                        %M = ones(size(lfp))*mean(mean(lfp(tIx,:),1));
                        %SD = ones(size(lfp))*std(mean(lfp(tIx,:),1));
                        M = ones(size(lfp,1),1)*mean(lfp(tIx,:),1);
                        SD = ones(size(lfp,1),1)*std(lfp(tIx,:),1);
                        lfp = (lfp-M)./SD;
                        
                        tIx = find(lfpDat.dsTrlTime >=-1 & lfpDat.dsTrlTime <=5);
                        if length(ixH) >= 20
                            
                            lfpPoolLabel = [lfpPoolLabel spkDat.chanLab(chanIx(jt))];
                            
                            lfpH = lfp(:,ixH);
                            chanCntH = chanCntH+1;
                            trlCntH = trlCntH + length(ixH);
                            
%                             parfor curTrl = 1:size(lfpH,2)
%                                 x = lfpH(:,curTrl)';
%                                 f = filtfilt(hpF,1,[x fliplr(x) x fliplr(x) x]);
%                                 x = f(2*length(x)+1:length(x)*3);
%                                 lfpH(:,curTrl) = x;
%                             end;
                            
                            avgLFPh = [avgLFPh mean(lfp(tIx,:),2)];
                            
                            LFPpoolH = [LFPpoolH lfpH(tIx,:)];
                            
                            %                             x = mean(lfpH,2);
                            %                             f = filtfilt(bpF,1,[fliplr(x) x fliplr(x)]);
                            %                             x = f(length(x)+1:length(x)*2);
                            %
                            %                             filtERP = [filtERP (tIx)'];
                            
                            %                             figure;
                            %                             hold on;
                            %                             plot(lfpDat.dsTrlTime(tIx),mean(lfpH(tIx,:),2),'g');
                            %                             plot(lfpDat.dsTrlTime(tIx),x(tIx),'r');
                            %                             xlim([-1 4.5]);
                            
                            if ~isempty(ixM)
                                lfpM = lfp(:,ixM);
                                chanCntM = chanCntM+1;
                                trlCntM = trlCntM + length(ixM);
                                
%                                 parfor curTrl = 1:size(lfpM,2)
%                                     x = lfpM(:,curTrl)';
%                                     f = filtfilt(hpF,1,[x fliplr(x) x fliplr(x) x]);
%                                     x = f(length(x)+1:length(x)*2);
%                                     lfpM(:,curTrl) = x;
%                                 end;
                                
                                avgLFPm = [avgLFPm mean(lfpM(tIx,:),2)];
                                
                                LFPpoolM = [LFPpoolM lfpM(tIx,:)];
                            end;
                        end;
                        
                        fprintf('\n');
                    end;
                    
                end;
            end;
        end;
    end;
end;
toc;

%%
iFRzsc = zeros(size(iFRpool));
for it = 1:size(iFRpool,1)
    x = iFRpool(it,:);
    M = nanmean(x(tx > -500 & tx <=0))*ones(1,size(x,2));
    SD = nanstd(x(tx > -500 & tx <=0))*ones(1,size(x,2));
    iFRzsc(it,:) = (x-M)./SD;
end;

%%
frZsc = zeros(size(frPool));
for it = 1:size(frPool,1)
    x = frPool(it,:);
    M = nanmean(x(tx2 > -500 & tx2 <=0))*ones(1,size(x,2));
    SD = nanstd(x(tx2 > -500 & tx2 <=0))*ones(1,size(x,2));
    frZsc(it,:) = (x-M)./SD;
end;
frZsc(find(isinf(frZsc(:,1))),:) = [];

uIx1 = [];
uIx2 = [];
for it = 1:size(frZsc,1)
    
    [~,ix] = max(frZsc(it,:));
    if tx2(ix) > 0 && tx2(ix) < 2e3
        uIx1 = [uIx1 it];
    elseif tx2(ix) > 2e3
        uIx2 = [uIx2 it];
    end;
    
end;

figure;
hold on;
plot([min(tx2) max(tx2)],[0 0],'k--');
m = mean(frZsc(uIx1,:),1);
se = std(frZsc(uIx1,:),0,1)./sqrt(length(uIx1)-1);
m = conv(m,gausswin(3),'same')./sum(gausswin(3));
se = conv(se,gausswin(3),'same')./sum(gausswin(3));
jbfill(tx2,m-se,m+se,[21 171 0]./255,[21 171 0]./255,1,.5);
hold on;
plot(tx2,m,'-','Color',[1 1 1]);
m = mean(frZsc(uIx2,:),1);
se = std(frZsc(uIx2,:),0,1)./sqrt(length(uIx1)-1);
m = conv(m,gausswin(3),'same')./sum(gausswin(3));
se = conv(se,gausswin(3),'same')./sum(gausswin(3));
jbfill(tx2,m-se,m+se,[255 159 0]./255,[255 159 0]./255,1,.5);
hold on;
plot(tx2,m,'-','Color',[.9 0 0]);
xlim([-500 4500]);
set(gca,'XTick',[0 2000 4000]);
xlabel('Time (ms)');
ylabel('Normalized firing rate (\sigma)');
set(gca,'LineWidth',3);
set(gca,'FontSize',14);
set(gcf,'Color','w');

%%
uIx1 = [];
uIx2 = [];
for it = 1:size(iFRzsc,1)
    
    [~,ix] = max(iFRzsc(it,:));
    if tx(ix) > 0 && tx(ix) < 2e3
        uIx1 = [uIx1 it];
    elseif tx(ix) > 2e3
        uIx2 = [uIx2 it];
    end;
    
end;

figure;
hold on;

M = conv(mean(iFRzsc(uIx1,:),1),gausswin(250),'same')./sum(gausswin(250));
SE = conv(std(iFRzsc(uIx1,:),0,1)./sqrt(length(uIx1)-1),gausswin(250),'same')./sum(gausswin(250));
jbfill(tx,M-SE,M+SE,[0 1 0],[0 1 0],1,.5);
hold on;
plot(tx,mean(M,1),'g');
M = conv(mean(iFRzsc(uIx2,:),1),gausswin(250),'same')./sum(gausswin(250));
SE = conv(std(iFRzsc(uIx2,:),0,1)./sqrt(length(uIx2)-1),gausswin(250),'same')./sum(gausswin(250));
jbfill(tx,M-SE,M+SE,[0 0 0],[0 0 0],1,.5);
hold on;
plot(tx,M,'k');

%%
pwDat = cell(1,length(LFPpoolH));
for it = 1:length(LFPpoolH)
    [pwDat(it)] = prewhitenLFP(LFPpoolH(it),'ARMfilt',1e3);
end;

%%
T = 6;
W = 2;
TW = T*W;
k = 2*TW-1;

params1                  = [];
params1.Fs               = 1e3;
params1.pad              = 2;
params1.fpass            = [0.5 32];
params1.tapers           = [TW k];
params1.trialave         = 1;

T = 6;
W = 8;
TW = T*W;
k = 2*TW-1;

params2                  = [];
params2.Fs               = 1e3;
params2.pad              = 2;
params2.fpass            = [32 256];
params2.tapers           = [TW k];
params2.trialave         = 1;

S1 = zeros(length(LFPpoolH),1032);
%S2 = zeros(length(LFPpoolH),7340);
for jt = 1:length(LFPpoolH)
    fprintf([num2str(jt),'/',num2str(length(LFPpoolH))]);    
    x = LFPpoolH{jt};
    x = x-ones(size(x,1),1)*mean(x,1);
     
    [s1,fx1] = mtspectrumc( x , params1);
    %[s2,fx2] = mtspectrumc(x, params2);
    S1(jt,:) = s1;
    %S2(jt,:) = s2;
    fprintf('\n');
end;

%%
T = 1;
W = 3;
TW = T*W;
k = 2*TW-1;

params1                  = [];
params1.Fs               = 1e3;
params1.pad              = 5;
params1.fpass            = [0.5 32];
params1.tapers           = [TW k];
params1.trialave         = 1;

T = 1;
W = 8;
TW = T*W;
k = 2*TW-1;

params2                  = [];
params2.Fs               = 1e3;
params2.pad              = 5;
params2.fpass            = [32 256];
params2.tapers           = [TW k];
params2.trialave         = 1;

S1b = zeros(length(LFPpoolH),1032);
S1p = zeros(length(LFPpoolH),1032);

S2b = zeros(length(LFPpoolH),7340);
S2p = zeros(length(LFPpoolH),7340);
tIx1 = find(-1000:5000 >=-1000 & -1000:5000 <=0);
tIx2 = find(-1000:5000 >=3000 & -1000:5000 <=4000);
for jt = 1:length(LFPpoolH)
    fprintf([num2str(jt),'/',num2str(length(LFPpoolH))]);    
    x = LFPpoolH{jt};
    x = x-ones(size(x,1),1)*mean(x,1);
     
    [s1,~] = mtspectrumc((x(tIx1,:)')', params1);
    [s2,fx3] = mtspectrumc((x(tIx2,:)')', params1);
    S1p(jt,:) = s2;
    S1b(jt,:) = s1;    
   
    [s1,~] = mtspectrumc((x(tIx1,:)')', params2);
    [s2,fx4] = mtspectrumc((x(tIx2,:)')', params2);
    
    S2b(jt,:) = s1;
    S2p(jt,:) = s2;
    fprintf('\n');
end;

%%
Fs = 1e3;

%lower frequencies
movingwin1 = [1 .1];%.2
T = movingwin1(1);% length of time window in s
W = 3;% smoothing (+/- 1Hz)
TW = T*W;% time-bandwidth product
k = floor(2*(T*W)-1);% number of tapers

paramsTF1              = [];
paramsTF1.Fs           = Fs;
paramsTF1.pad          = 5;
paramsTF1.fpass        = [0.5 34];
paramsTF1.tapers       = [TW k];
paramsTF1.trialave     = 0;

%higher frequencies
movingwin2 = [0.25 0.0625];
T = movingwin2(1);% length of time window in s
W = 8;% smoothing (+/- 10Hz)cd
TW = T*W;% time-bandwidth product
k = floor(2*(T*W)-1);% number of tapers

paramsTF2              = [];
paramsTF2.Fs           = Fs;
paramsTF2.pad          = 5;
paramsTF2.fpass        = [30 260];
paramsTF2.tapers       = [TW k];
paramsTF2.trialave     = 0;

%%
[stPOW1] = cell(1,length(LFPpoolH));
[stPOW2] = cell(1,length(LFPpoolH));
for it = 1:length(LFPpoolH)
    fprintf([num2str(it),'/',num2str(length(LFPpoolH))]);
    x = LFPpoolH{it};
    x = x-ones(size(x,1),1)*mean(x,1);
    
    [S,t1,f1] = mtspecgramc( x, movingwin1, paramsTF1);
    t1 = t1-1;
    S = S(t1>=-.4 & t1 <=4.5,:,:);
    t1 = t1(t1>=-.4 & t1 <=4.5);
    stPOW1{it} = S;
    
    [S,t2,f2] = mtspecgramc( x, movingwin2, paramsTF2);
    t2 = t2-1;
    S = S(t2>=-.4 & t2 <=4.5,:,:);
    t2 = t2(t2>=-.4 & t2 <=4.5);
    stPOW2{it} = S;
    fprintf('\n');
end;

[S,t1,f1] = mtspecgramc( (avgLFPh-ones(size(avgLFPh,1),1)*mean(avgLFPh,1) ), movingwin1, paramsTF1);
t1 = t1-1;
S = S(t1>=-.4 & t1 <=4.5,:,:);
t1 = t1(t1>=-.4 & t1 <=4.5);
erpPOW1 = S;

[S,t2,f2] = mtspecgramc( (avgLFPh-ones(size(avgLFPh,1),1)*mean(avgLFPh,1) ), movingwin2, paramsTF2);
t2 = t2-1;
S = S(t2>=-.4 & t2<=4.5,:,:);
t2 = t2(t2>=-.4&t2<=4.5);
erpPOW2 = S;

%%
stPOW3 = cell(1,length(LFPpoolM));
% stPOW4 = cell(1,length(LFPpoolM));

for it = 1:length(LFPpoolM)
    
    x = LFPpoolM{it};
    x = x-ones(size(x,1),1)*mean(x,1);
    
    [S,t1,f1] = mtspecgramc( x, movingwin1, paramsTF1);
    t1 = t1-1;
    S = S(t1>=-.4 & t1 <=4.5,:,:);
    t1 = t1(t1>=-.4 & t1 <=4.5);
    stPOW3{it} = S;
    
%     [S,t2,f2] = mtspecgramc( x, movingwin2, paramsTF2);
%     t2 = t2-1;
%     S = S(t2>=-.4 & t2 <=4.5,:,:);
%     t2 = t2(t2>=-.4 & t2 <=4.5);
%     stPOW4{it} = S;
    
end;


% [S,t1,f1] = mtspecgramc( gradient(avgLFPm')', movingwin1, paramsTF1);
% t1 = t1-1;
% S = S(t1>=-.75 & t1 <=4.5,:,:);
% t1 = t1(t1>=-.75 & t1 <=4.5);
% erpPOW3 = S;
% 
% 
% [S,t2,f2] = mtspecgramc( gradient(avgLFPm')', movingwin2, paramsTF2);
% t2 = t2-1;
% S = S(t2>=-.75 & t2<=4.5,:,:);
% t2 = t2(t2>=-.75&t2<=4.5);
% erpPOW4 = S;

%%
for it = 1:length(stPOW1)
    figure;
    imagesc(t1,f1,20*log10(squeeze(mean(stPOW1{(it)},3)))');
    axis xy;colorbar;
    colormap jet;
end;

%%
for it = 1:size(X2,1)
    figure;
    imagesc(t1,f1,squeeze(log10(X2(it,:,:))-log10(M2(it,:,:)))');
    axis xy;colorbar;
    colormap jet;
end;

%%
X = zeros(length(stPOW1),length(t1),length(f1));
M = zeros(length(stPOW1),length(t1),length(f1));
for it = 1:length(stPOW1)    
    x = (squeeze(mean(stPOW1{(it)},3)));
    m = ones(size(x,1),1)*mean(x(t1<=0,:),1);
    X(it,:,:) = x;
    M(it,:,:) = m;    
end;

X(30,:,:) = [];
M(30,:,:) = [];

X2 = zeros(length(stPOW3),length(t1),length(f1));
M2 = zeros(length(stPOW3),length(t1),length(f1));
for it = 1:length(stPOW3)    
    x = (squeeze(mean(stPOW3{(it)},3)));
    m = ones(size(x,1),1)*mean(x(t1<=0,:),1);
    X2(it,:,:) = x;
    M2(it,:,:) = m;    
end;

empT = zeros(length(t1),length(f1));
pval = zeros(length(t1),length(f1));

for it = 1:length(t1)
    for jt = 1:length(f1)
        
        d = X(:,it,jt)-M(:,it,jt);
        [~,p,~,stat] = ttest(d);
        empT(it,jt) = stat.tstat;
        pval(it,jt) = p;
    end;
end;
[hc, crit_p, adj_ci_cvrg, adj_p]=fdr_bh(pval,0.001);

%%
figure;
subplot(231);
a = gca;
hold on;
imagesc(t1.*1e3,f1,(squeeze(mean((10*log10(X)-10*log10(M)),1)))');
colormap jet;colorbar;axis xy;
plot([0 0],[min(f1) max(f1)],'k');
plot([2 2].*1e3,[min(f1) max(f1)],'k');
axis tight;

subplot(232);
a = [a gca];
hold on;
imagesc(t1.*1e3,f1,(empT.*(hc))');%pval<0.05/length(empT(:)))
plot([0 0],[min(f1) max(f1)],'k');
plot([2 2].*1e3,[min(f1) max(f1)],'k');
axis xy;caxis([-max(max(abs(empT))) max(max(abs(empT)))]);
colormap jet;colorbar;axis tight;

subplot(233);

a = [a gca];
x = (erpPOW1);
m = zeros(size(x));
for it = 1:size(x,3)
    x(:,:,it) = (squeeze(x(:,:,it)));
    m(:,:,it) = ones(size(x,1),1)*squeeze(mean(x(t1<=0,:,it),1));
end;
hold on;
imagesc(t1.*1e3,f1,squeeze(mean((10*log10(x)-10*log10(m)),3))');
plot([0 0],[min(f1) max(f1)],'k');
plot([2 2].*1e3,[min(f1) max(f1)],'k');
axis xy;colorbar;axis tight;

subplot(234);
a = [a gca];
m = squeeze(mean(10*log10(mean(X(:,:,f1>=3 & f1<=7),3))-10*log10(mean(M(:,:,f1>=3 & f1<=7),3)),1));
se = squeeze(std(10*log10(mean(X(:,:,f1>=3 & f1<=7),3))-10*log10(mean(M(:,:,f1>=3 & f1<=7),3)),0,1))./sqrt(size(X,1)-1);
jbfill(t1.*1e3,m-se,m+se,'c','c',1,.5);
hold on;
plot(t1.*1e3,m,'b');
plot([min(t1) max(t1)].*1e3,[0 0],'k--');
axis tight;

subplot(235);
a = [a gca];
x = 10*log10(S1p)-10*log10(S1b);
m = mean(x,1);        
se = std(x,0,1)./sqrt(size(x,1)-1);
jbfill((fx3),m-se,m+se,[125 251 125]./255,[125 251 125]./255,1,.5);
hold on;
plot((fx3),m,'Color',[60 170 133]./255);
% x = log10(S2p)-log10(S2b);
% m = mean(x,1);        
% se = std(x,0,1)./sqrt(size(x,1)-1);
% jbfill((fx4),m-se,m+se,'g','g',1,.5);
% hold on;
% plot((fx4),m,'k');
axis tight;

subplot(236);
a = [a gca];
hold on;
tIx = find(t1 >= 3 & t1 <=4);
fIx = find(f1 >= 3 & f1 <=7);
x1 = squeeze(mean(mean(X(:,tIx,fIx),3),2));
x2 = squeeze(mean(M(:,1,fIx),3));
y = normalize([x1;x2]);
x1 = y(1:length(x1));
x2 = y(length(x1)+1:length(y));
for it = 1:length(x1)
    plot([1 2],([x2(it) x1(it)]),'-','Color',[.75 .75 .75]);
end;
h = [];
h(1) = plot(ones(1,length(x1)),(x2),'bo');
h(2) = plot(2*ones(1,length(x2)),(x1),'rx');
xlim([0 3]);
legend(h,'Baseline','Encoding');
legend boxoff;

set(a,'LineWidth',3);
set(a,'Fontsize',14);
set(gcf,'Color','w');
set(a([1 2 3 4]),'XTick',[0 2 4].*1e3);
set(a(6),'XTick',[1 2]);
for it = [1 2 3 4]
    xlabel(a(it),'Time (ms)');
    ylabel(a(it),'Frequency (Hz)');
end;
xlabel(a(5),'Frequency (Hz)');
ylabel(a(5),{'Power (dB)';'LFP'});
ylabel(a(4),{'Power (dB)';'LFP'});
ylabel(a(6),{'Power (a.u.)';'LFP '});

set(a(6),'XTick',[]);
set(a(6),'YTick',[0 1]);

for it = [1 2 3]
    box(a(it),'on');
end;

%%
X2 = zeros( length(stPOW2), length(t2),length(f2) );
M2 = zeros( length(stPOW2), length(t2),length(f2) );

for it = 1:length(stPOW2)
    x = squeeze(mean( stPOW2{(it)} ,3));    
    m = ones(size(x,1),1)*mean(x(t2 <=0,:),1);
    M2(it,:,:) = m;
    X2(it,:,:) = x;
end;

figure;
imagesc(t2,f2,squeeze(mean(10*log10(X2)-10*log10(M2),1))');
axis xy;
colormap jet;

pval2 = zeros(length(t2),length(f2));
empT2 = zeros(length(t2),length(f2));
for it = 1:length(t2)
    for jt = 1:length(f2)
        d = squeeze(X2(:,it,jt))-squeeze(M2(:,it,jt));
        [~,p,~,stat] = ttest(d);
        pval2(it,jt) = p;
        empT2(it,jt) = stat.tstat;
        
    end;
end;

[hc2, crit_p, adj_ci_cvrg, adj_p]=fdr_bh(pval2,0.001);

figure;
subplot(121);
imagesc(t2,f2,(empT2'));
axis xy;
subplot(122);
imagesc(t2,f2,(empT2.*(hc2))');
axis xy;

